[build-system]
requires = ["flit_core >=2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "mpacklog"
readme = "README.md"
authors = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
maintainers = [
    {name = "Stéphane Caron", email = "stephane.caron@normalesup.org"},
]
dynamic = ['version', 'description']
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "aiofiles >= 0.7.0",
    "loop-rate-limiters >= 1.0.0",
    "msgpack >= 1.0.2",
]
keywords = ["messagepack", "serialization", "logging"]

[project.scripts]
mpacklog = "mpacklog.cli:main"

[project.urls]
Homepage = "https://github.com/stephane-caron/mpacklog.py"
Source = "https://github.com/stephane-caron/mpacklog.py"
Tracker = "https://github.com/stephane-caron/mpacklog.py/issues"
Changelog = "https://github.com/stephane-caron/mpacklog.py/blob/master/CHANGELOG.md"

[tool.mypy]
disable_error_code = ["attr-defined", "name-defined"]
ignore_missing_imports = true
warn_no_return = true

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64", "osx-64", "win-64"]

[tool.pixi.pypi-dependencies]
mpacklog = { path = ".", editable = true }

[tool.pixi.dependencies]
python = ">=3.8,<3.13"
numpy = ">=1.15.4"

[tool.pixi.feature.coverage.dependencies]
coverage = ">=5.5"

[tool.pixi.feature.coverage.tasks]
coverage-erase = "coverage erase"
coverage-run = { cmd = "coverage run -m unittest discover", depends-on = ["coverage-erase"] }
coverage = { cmd = "coverage report --rcfile=pyproject.toml", depends-on = ["coverage-run"] }

[tool.pixi.feature.docs.dependencies]
furo = ">=2023.8.17"
sphinx = ">=7.2.2"
sphinx-autodoc-typehints = "*"
sphinx-favicon = "*"

[tool.pixi.feature.docs.tasks]
docs-build = "sphinx-build docs _build -W"
docs-open = { cmd = "xdg-open _build/index.html", depends-on = ["docs-build"] }

[tool.pixi.feature.lint.dependencies]
mypy = ">=0.812"
pylint = ">=2.8.2"
ruff = ">=0.4.3"

[tool.pixi.feature.lint.pypi-dependencies]
types-aiofiles = ">=23.2.0.0"

[tool.pixi.feature.lint.tasks]
lint-mypy = "mypy mpacklog"
lint-pylint = "pylint mpacklog --exit-zero"
lint-ruff-check = "ruff check mpacklog"
lint-ruff-format = "ruff format --check mpacklog"
lint = { depends-on = ["lint-mypy", "lint-pylint", "lint-ruff-check", "lint-ruff-format"] }

[tool.pixi.feature.py38.dependencies]
python = "3.8.*"

[tool.pixi.feature.py39.dependencies]
python = "3.9.*"

[tool.pixi.feature.py310.dependencies]
python = "3.10.*"

[tool.pixi.feature.py311.dependencies]
python = "3.11.*"

[tool.pixi.feature.py312.dependencies]
python = "3.12.*"

[tool.pixi.feature.test.tasks]
test = "python -m unittest discover"

[tool.pixi.environments]
default = { features = [], solve-group = "default" }
coverage = { features = ["py312", "coverage"], solve-group = "py312" }
docs = { features = ["py312", "docs"], solve-group = "py312" }
lint = { features = ["py312", "lint"], solve-group = "py312" }
test-py38 = { features = ["py38", "test"], solve-group = "py38" }
test-py39 = { features = ["py39", "test"], solve-group = "py39" }
test-py310 = { features = ["py310", "test"], solve-group = "py310" }
test-py311 = { features = ["py311", "test"], solve-group = "py311" }
test-py312 = { features = ["py312", "test"], solve-group = "py312" }

[tool.pylint.messages_control]
disable = [
    "R0903", # too-few-public-methods
]

[tool.ruff]
line-length = 79

[tool.ruff.lint]
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # pydocstyle
    "D"
]
ignore = [
    "D401",  # good for methods but not for class docstrings
    "D405",  # British-style section names are also "proper"!
]
pydocstyle = { convention = "google" }
